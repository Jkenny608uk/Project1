---
- hosts: localhost
  become: true
  become_method: sudo
  connection: local
  roles:
    # Following client environments are only needed if NOT using the `client_smoke_tests` role
    #- { role: basho-labs/php }
    #- { role: basho-labs/golang }
    #- { role: basho-labs/java }
    #- { role: basho-labs/nodejs }
    #- { role: basho-labs/ruby }
    #- { role: basho-labs/dotnet }

    # `riak_testing` configures Riak for client library tests
    #   * `riak_conf_template` - the Ansible Riak role tempalte is overridden here
    #   * `riak_node_name` -
    #   * `riak_testing_nightlies` - is used to use a nightly build of Riak versus packages via the Ansible Galaxy role
    - {
        role: basho-labs/riak_testing,
        #riak_testing_nightlies: true,
        riak_conf_template: '/etc/ansible/roles/basho-labs/riak_testing/templates/riak.conf.j2',
        riak_node_name: "riak@127.0.0.1",
      }

    # `client_smoke_tests` executes end to end smoke tests by automatically:
    #   * configuring client environments
    #   * checking out the latest release for each client library to /tmp/client-libraries on remote machine
    #   * fetches client library dependencies
    #   * executes client library integration tests
    #   * logs any failures to /var/log/client_smoke_tests/ on the local machine
    #   * use ct_test_libs to limit the execution of client languages to the supplied list
    - {
        role: basho-labs/client_smoke_tests,
        #ct_test_libs: ['php','go', 'ruby', 'nodejs', 'java']
      }
  vars:
    # the vars section is used to pick the settings you want for your local environment
    # see roles/{role_name}/defaults/main.yml for settings you can override

    # GH Personal access token is needed to hit the GH API, see https://github.com/settings/tokens
    #ct_github_token: a_valid_token

    # Uncomment following line to use alternate package. Options include URL to RPM or DEB, riak-ts, or a specific version from packagecloud.
    #riak_package: a_valid_package

    #riak_testing_role_dev: true
    riak_search:  'on'
    riak_backend: 'multi'
    riak_pb_bind_ip: 127.0.0.1

    # setup Riak environment (bucket-types, users, sources, grants, conf)
    riak_bucket_types:
      - { name: bitcask, props: '{"props":{"backend":"bitcask_backend"}}' }
      - { name: counters, props: '{"props":{"datatype":"counter"}}' }
      - { name: hlls, props: '{"props":{"datatype":"hll"}}' }
      - { name: gsets, props: '{"props":{"datatype":"gset"}}' }
      - { name: leveldb_type, props: '' }
      - { name: maps, props: '{"props":{"datatype":"map"}}' }
      - { name: memory_type, props: '{"props":{"backend":"mem_backend"}}' }
      - { name: mr, props: '' }
      - { name: no_siblings, props: '{"props":{"allow_mult":"false"}}' }
      - { name: other_counters, props: '{"props":{"datatype":"counter"}}' }
      - { name: plain, props: '' }
      - { name: search_type, props: '' }
      - { name: sets, props: '{"props":{"datatype":"set"}}' }
      - { name: write_once, props: '{"props":{"write_once":true}}' }
      - { name: yokozuna, props: '' }

      # PHP Testing Buckets
      - { name: phptest_counters,  props: '{"props":{"datatype":"counter"}}' }
      - { name: phptest_leveldb, props: '' }
      - { name: phptest_maps, props: '{"props":{"datatype":"map"}}' }
      - { name: phptest_search, props: '' }
      - { name: phptest_sets, props: '{"props":{"datatype":"set"}}' }
